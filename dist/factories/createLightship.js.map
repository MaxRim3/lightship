{"version":3,"sources":["../../src/factories/createLightship.js"],"names":["log","Logger","child","namespace","defaultConfiguration","detectKubernetes","gracefulShutdownTimeout","port","shutdownDelay","shutdownHandlerTimeout","signals","terminate","process","exit","userConfiguration","blockingTasks","deferredFirstReady","Deferred","promise","then","info","eventEmitter","EventEmitter","beacons","shutdownHandlers","configuration","Error","serverIsReady","serverIsShuttingDown","isServerReady","length","debug","app","modeIsLocal","server","listen","undefined","address","httpTerminator","get","request","response","status","send","SERVER_IS_SHUTTING_DOWN","SERVER_IS_READY","SERVER_IS_NOT_READY","SERVER_IS_NOT_SHUTTING_DOWN","signalNotReady","warn","signalReady","resolve","shutdown","nextReady","gracefulShutdownTimeoutId","Infinity","setTimeout","unref","Promise","check","off","on","clearTimeout","shutdownHandlerTimeoutId","shutdownHandler","error","signal","createBeacon","context","beacon","push","die","trace","splice","indexOf","emit","isServerShuttingDown","queueBlockingTask","blockingTask","result","filter","maybeTargetBlockingTask","registerShutdownHandler","whenFirstReady"],"mappings":"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","sourcesContent":["// @flow\n\n// eslint-disable-next-line fp/no-events\nimport EventEmitter from 'events';\nimport delay from 'delay';\nimport express from 'express';\nimport {\n  createHttpTerminator,\n} from 'http-terminator';\nimport Deferred from 'promise-deferred';\nimport {\n  serializeError,\n} from 'serialize-error';\nimport Logger from '../Logger';\nimport {\n  SERVER_IS_NOT_READY,\n  SERVER_IS_NOT_SHUTTING_DOWN,\n  SERVER_IS_READY,\n  SERVER_IS_SHUTTING_DOWN,\n} from '../states';\nimport type {\n  ConfigurationInputType,\n  ConfigurationType,\n  LightshipType,\n  ShutdownHandlerType,\n} from '../types';\nimport {\n  isKubernetes,\n} from '../utilities';\n\nconst log = Logger.child({\n  namespace: 'factories/createLightship',\n});\n\nconst defaultConfiguration = {\n  detectKubernetes: true,\n  gracefulShutdownTimeout: 60_000,\n  port: 9_000,\n  shutdownDelay: 5_000,\n  shutdownHandlerTimeout: 5_000,\n  signals: [\n    'SIGTERM',\n    'SIGHUP',\n    'SIGINT',\n  ],\n  terminate: () => {\n    // eslint-disable-next-line no-process-exit\n    process.exit(1);\n  },\n};\n\nexport default (userConfiguration?: ConfigurationInputType): LightshipType => {\n  let blockingTasks = [];\n\n  const deferredFirstReady = new Deferred();\n\n  // eslint-disable-next-line promise/always-return, promise/catch-or-return\n  deferredFirstReady.promise.then(() => {\n    log.info('service became available for the first time');\n  });\n\n  const eventEmitter = new EventEmitter();\n\n  const beacons = [];\n\n  const shutdownHandlers: Array<ShutdownHandlerType> = [];\n\n  const configuration: ConfigurationType = {\n    ...defaultConfiguration,\n    ...userConfiguration,\n  };\n\n  if (configuration.gracefulShutdownTimeout < configuration.shutdownHandlerTimeout) {\n    throw new Error('gracefulShutdownTimeout cannot be lesser than shutdownHandlerTimeout.');\n  }\n\n  let serverIsReady = false;\n  let serverIsShuttingDown = false;\n\n  const isServerReady = () => {\n    if (blockingTasks.length > 0) {\n      log.debug('service is not ready because there are blocking tasks');\n\n      return false;\n    }\n\n    return serverIsReady;\n  };\n\n  const app = express();\n\n  const modeIsLocal = configuration.detectKubernetes === true && isKubernetes() === false;\n\n  modeIsLocal = false;\n  const server = app.listen(modeIsLocal ? undefined : configuration.port, () => {\n    log.info('Lightship HTTP service is running on port %s', server.address().port);\n  });\n\n  const httpTerminator = createHttpTerminator({\n    server,\n  });\n\n  app.get('/health', (request, response) => {\n    if (serverIsShuttingDown) {\n      response.status(500).send(SERVER_IS_SHUTTING_DOWN);\n    } else if (serverIsReady) {\n      response.send(SERVER_IS_READY);\n    } else {\n      response.status(500).send(SERVER_IS_NOT_READY);\n    }\n  });\n\n  app.get('/live', (request, response) => {\n    if (serverIsShuttingDown) {\n      response.status(500).send(SERVER_IS_SHUTTING_DOWN);\n    } else {\n      response.send(SERVER_IS_NOT_SHUTTING_DOWN);\n    }\n  });\n\n  app.get('/ready', (request, response) => {\n    if (serverIsReady) {\n      response.send(SERVER_IS_READY);\n    } else {\n      response.status(500).send(SERVER_IS_NOT_READY);\n    }\n  });\n\n  const signalNotReady = () => {\n    if (serverIsReady === false) {\n      log.warn('server is already in a SERVER_IS_NOT_READY state');\n    }\n\n    log.info('signaling that the server is not ready to accept connections');\n\n    serverIsReady = false;\n  };\n\n  const signalReady = () => {\n    if (serverIsShuttingDown) {\n      log.warn('server is already shutting down');\n\n      return;\n    }\n\n    log.info('signaling that the server is ready');\n\n    if (blockingTasks.length > 0) {\n      log.debug('service will not become immediately ready because there are blocking tasks');\n    }\n\n    serverIsReady = true;\n\n    if (blockingTasks.length === 0) {\n      deferredFirstReady.resolve();\n    }\n  };\n\n  const shutdown = async (nextReady: boolean) => {\n    if (serverIsShuttingDown) {\n      log.warn('server is already shutting down');\n\n      return;\n    }\n\n    // @see https://github.com/gajus/lightship/issues/12\n    // @see https://github.com/gajus/lightship/issues/25\n    serverIsReady = nextReady;\n    serverIsShuttingDown = true;\n\n    log.info('received request to shutdown the service');\n\n    if (configuration.shutdownDelay) {\n      log.debug('delaying shutdown handler by %d seconds', configuration.shutdownDelay / 1_000);\n\n      await delay(configuration.shutdownDelay);\n    }\n\n    let gracefulShutdownTimeoutId;\n\n    if (configuration.gracefulShutdownTimeout !== Infinity) {\n      gracefulShutdownTimeoutId = setTimeout(() => {\n        log.warn('graceful shutdown timeout; forcing termination');\n\n        configuration.terminate();\n      }, configuration.gracefulShutdownTimeout);\n\n      // $FlowFixMe\n      gracefulShutdownTimeoutId.unref();\n    }\n\n    if (beacons.length) {\n      await new Promise((resolve) => {\n        const check = () => {\n          log.debug('checking if there are live beacons');\n\n          if (beacons.length > 0) {\n            log.info({\n              beacons,\n            }, 'program termination is on hold because there are live beacons');\n          } else {\n            log.info('there are no live beacons; proceeding to terminate the Node.js process');\n\n            eventEmitter.off('beaconStateChange', check);\n\n            resolve();\n          }\n        };\n\n        eventEmitter.on('beaconStateChange', check);\n\n        check();\n      });\n    }\n\n    if (gracefulShutdownTimeoutId) {\n      clearTimeout(gracefulShutdownTimeoutId);\n    }\n\n    let shutdownHandlerTimeoutId;\n\n    if (configuration.shutdownHandlerTimeout !== Infinity) {\n      shutdownHandlerTimeoutId = setTimeout(() => {\n        log.warn('shutdown handler timeout; forcing termination');\n\n        configuration.terminate();\n      }, configuration.shutdownHandlerTimeout);\n\n      // $FlowFixMe\n      shutdownHandlerTimeoutId.unref();\n    }\n\n    log.debug('running %d shutdown handler(s)', shutdownHandlers.length);\n\n    for (const shutdownHandler of shutdownHandlers) {\n      try {\n        await shutdownHandler();\n      } catch (error) {\n        log.error({\n          error: serializeError(error),\n        }, 'shutdown handler produced an error');\n      }\n    }\n\n    if (shutdownHandlerTimeoutId) {\n      clearTimeout(shutdownHandlerTimeoutId);\n    }\n\n    log.debug('all shutdown handlers have run to completion; proceeding to terminate the Node.js process');\n\n    await httpTerminator.terminate();\n\n    setTimeout(() => {\n      log.warn('process did not exit on its own; investigate what is keeping the event loop active');\n\n      configuration.terminate();\n    }, 1_000)\n\n      // $FlowFixMe\n      .unref();\n  };\n\n  if (modeIsLocal) {\n    log.warn('shutdown handlers are not used in the local mode');\n  } else {\n    for (const signal of configuration.signals) {\n      process.on(signal, () => {\n        log.debug({\n          signal,\n        }, 'received a shutdown signal');\n\n        shutdown(false);\n      });\n    }\n  }\n\n  const createBeacon = (context) => {\n    const beacon = {\n      context: context || {},\n    };\n\n    beacons.push(beacon);\n\n    return {\n      die: async () => {\n        log.trace({\n          beacon,\n        }, 'beacon has been killed');\n\n        beacons.splice(beacons.indexOf(beacon), 1);\n\n        eventEmitter.emit('beaconStateChange');\n\n        await delay(0);\n      },\n    };\n  };\n\n  return {\n    createBeacon,\n    isServerReady,\n    isServerShuttingDown: () => {\n      return serverIsShuttingDown;\n    },\n    queueBlockingTask: (blockingTask) => {\n      blockingTasks.push(blockingTask);\n\n      // eslint-disable-next-line promise/catch-or-return\n      blockingTask.then((result) => {\n        blockingTasks = blockingTasks.filter((maybeTargetBlockingTask) => {\n          return maybeTargetBlockingTask !== blockingTask;\n        });\n\n        if (blockingTasks.length === 0 && serverIsReady === true) {\n          deferredFirstReady.resolve();\n        }\n\n        return result;\n      });\n    },\n    registerShutdownHandler: (shutdownHandler) => {\n      shutdownHandlers.push(shutdownHandler);\n    },\n    server,\n    shutdown: () => {\n      return shutdown(false);\n    },\n    signalNotReady,\n    signalReady,\n    whenFirstReady: () => {\n      return deferredFirstReady.promise;\n    },\n  };\n};\n"],"file":"createLightship.js"}